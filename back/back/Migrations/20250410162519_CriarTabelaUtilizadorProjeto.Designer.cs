// <auto-generated />
using System;
using BackendTesteESII.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BackendTesteESII.Migrations
{
    [DbContext(typeof(GestaoServicosClientesContext))]
    [Migration("20250410162519_CriarTabelaUtilizadorProjeto")]
    partial class CriarTabelaUtilizadorProjeto
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BackendTesteESII.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("telefone");

                    b.HasKey("Id");

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("BackendTesteESII.Models.Convite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("estado");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("integer")
                        .HasColumnName("projeto_id");

                    b.Property<int>("UtilizadorId")
                        .HasColumnType("integer")
                        .HasColumnName("utilizador_id");

                    b.HasKey("Id");

                    b.ToTable("convite");
                });

            modelBuilder.Entity("BackendTesteESII.Models.Projeto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer")
                        .HasColumnName("cliente_id");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_fim");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_inicio");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("descricao");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("estado");

                    b.Property<int>("HorasTrabalho")
                        .HasColumnType("integer")
                        .HasColumnName("horas_trabalho");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<int>("UtilizadorId")
                        .HasColumnType("integer")
                        .HasColumnName("utilizador_id");

                    b.HasKey("Id");

                    b.ToTable("projeto");
                });

            modelBuilder.Entity("BackendTesteESII.Models.Relatorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Ano")
                        .HasColumnType("integer")
                        .HasColumnName("ano");

                    b.Property<int>("Mes")
                        .HasColumnType("integer")
                        .HasColumnName("mes");

                    b.Property<int>("TotalHoras")
                        .HasColumnType("integer")
                        .HasColumnName("total_horas");

                    b.Property<decimal>("TotalPreco")
                        .HasColumnType("numeric")
                        .HasColumnName("total_preco");

                    b.Property<int>("UtilizadorId")
                        .HasColumnType("integer")
                        .HasColumnName("utilizador_id");

                    b.HasKey("Id");

                    b.ToTable("relatorio");
                });

            modelBuilder.Entity("BackendTesteESII.Models.RelatorioProjeto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer")
                        .HasColumnName("cliente_id");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("integer")
                        .HasColumnName("projeto_id");

                    b.Property<int>("TotalHoras")
                        .HasColumnType("integer")
                        .HasColumnName("total_horas");

                    b.Property<decimal>("TotalPreco")
                        .HasColumnType("numeric")
                        .HasColumnName("total_preco");

                    b.HasKey("Id");

                    b.ToTable("relatorio_projeto");
                });

            modelBuilder.Entity("BackendTesteESII.Models.Tarefa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_fim");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_inicio");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("descricao");

                    b.Property<int>("HorasGastas")
                        .HasColumnType("integer")
                        .HasColumnName("horas_gastas");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("integer")
                        .HasColumnName("projeto_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("status");

                    b.Property<int>("UtilizadorId")
                        .HasColumnType("integer")
                        .HasColumnName("utilizador_id");

                    b.HasKey("Id");

                    b.ToTable("tarefa");
                });

            modelBuilder.Entity("BackendTesteESII.Models.Utilizador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<int>("HorasDia")
                        .HasColumnType("integer")
                        .HasColumnName("horas_dia");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("password");

                    b.HasKey("Id");

                    b.ToTable("utilizador");
                });

            modelBuilder.Entity("BackendTesteESII.Models.UtilizadorProjeto", b =>
                {
                    b.Property<int>("UtilizadorId")
                        .HasColumnType("integer")
                        .HasColumnName("utilizador_id");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("integer")
                        .HasColumnName("projeto_id");

                    b.HasKey("UtilizadorId", "ProjetoId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("utilizador_projeto");
                });

            modelBuilder.Entity("BackendTesteESII.Models.UtilizadorProjeto", b =>
                {
                    b.HasOne("BackendTesteESII.Models.Projeto", "Projeto")
                        .WithMany("UtilizadorProjetos")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendTesteESII.Models.Utilizador", "Utilizador")
                        .WithMany("UtilizadorProjetos")
                        .HasForeignKey("UtilizadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("BackendTesteESII.Models.Projeto", b =>
                {
                    b.Navigation("UtilizadorProjetos");
                });

            modelBuilder.Entity("BackendTesteESII.Models.Utilizador", b =>
                {
                    b.Navigation("UtilizadorProjetos");
                });
#pragma warning restore 612, 618
        }
    }
}
